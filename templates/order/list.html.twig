{# templates/product/list.html.twig #}
{% extends 'base.html.twig' %}

{% block body %}
    <h1>Список заказов</h1>
    <div id="order-list">
        {% include 'order/_list.html.twig' %}
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const orderList = document.getElementById('order-list');
            const paginationContainer = document.createElement('div');
            paginationContainer.classList.add('pagination');

            function fetchOrders(url) {
                fetch(url, {
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        renderOrders(data);
                        renderPagination(data.pagination);
                        setupPaginationLinks();
                    })
                    .catch(error => console.error('Error fetching orders:', error));
            }

            function renderOrders(data) {
                let html = '<table><thead><tr><th>Группировка по:</th><th>Количество заказов:</th></tr></thead><tbody>';
                data.items.forEach(item => {
                    html += `<tr><td>${item.time}</td><td>${item.orderCount}</td></tr>`;
                });
                html += '</tbody></table>';
                orderList.innerHTML = html;
            }

            function renderPagination(pagination) {
                const param = new URLSearchParams(window.location.search).get("groupBy");

                paginationContainer.innerHTML = Array.from({ length: pagination.total_pages }, (_, i) => `
                    <a href="?page=${i + 1}&groupBy=${param}" class="${pagination.current_page === i + 1 ? 'current' : ''}">
                        ${i + 1}/
                    </a>
                `).join('');

                orderList.appendChild(paginationContainer);
            }

            function setupPaginationLinks() {
                paginationContainer.querySelectorAll('a').forEach(link => {
                    link.removeEventListener('click', handlePaginationClick); // Удаление существующих обработчиков
                    link.addEventListener('click', handlePaginationClick);
                });
            }

            function handlePaginationClick(e) {
                e.preventDefault();
                fetchOrders(e.target.href);
            }

            // Инициализация при загрузке страницы
            fetchOrders(window.location.href);
        });
    </script>
{% endblock %}
